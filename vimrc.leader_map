"map h gT
"map l gt
map ♥ <ESC>:w<Return>
imap ♥ <ESC>:w<Return>
map ♢ <ESC>:q<Return>
imap ♢ <ESC>:q<Return>
cmap é <C-t>
"map ù <C-p>
imap ♋ <ESC>:q<Return>
map ♋ :q<Return>
map <C-n> :NERDTreeToggle<CR>
imap <C-n> <ESC>:NERDTreeToggle<CR>
map ✔ :NERDTreeToggle<CR>
imap ✔ <ESC>:NERDTreeToggle<CR>
map ☆ <C-p>
imap ☆ <C-t>
cmap ☆ <C-(>
map! ☆ <)C-t>
map ♧ <<
map ♡ >>
imap ♧ <ESC><<i
imap ♡ <ESC>>>i
map ♤ c$
imap ♤ <ESC>c$
map é $
"imap é -><Return>
map ♞ <C-w>t<C-w>K
map ♘ <C-w>t<C-w>H
"imap éé <ESC>Vaf
"imap éé <ESC>Vaf
map ♋  :tabnew<CR>
"map ♈  <C-w><C-w>
map è :tabnew<CR>:NERDTreeToggle<CR>
map <Leader>è :vs<CR>:NERDTreeToggle<CR>
" control p
map <Leader>é :tabnew<CR><C-p>
map <Leader>s :vs<CR><C-p>
map <Leader>n <C-w>w
" align = and hash
map <Leader>l :Tabularize /=<CR>
map <Leader>p :Tabularize/\w:\zs/<CR>
map <Leader>1 1gt
map <Leader>2 2gt
map <Leader>3 3gt
map <Leader>4 4gt
map <Leader>5 5gt
map <Leader>6 6gt
map <Leader>7 7gt
map <Leader>8 8gt
map <Leader>9 9gt
map <Leader>a <C-p>
" Rang tool
"map <Leader>t :%s/$scope/\$scope/g<CR>
map <Leader>t "t
" paste
map <Leader>dl :set paste!<CR>
"Upercase word
"imap àà <esc>bveUw
noremap à V
map <leader>aa <Plug>BlockToggle

map <Leader>cp ci)
"
" RANG path
"
"
cmap ⦿g source/assets/javascripts/ng/
cmap ⦿c source/assets/javascripts/ng/controllers/
cmap ⦿s source/assets/javascripts/ng/services/
cmap ⦿t source/templates
cmap ⦿p source/partials

"vimrc
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>

nnoremap <leader>vlm :vsplit ~/.vimrc.leader_map<cr>
nnoremap <leader>vb :vsplit ~/.vimrc.bundles<cr>
nnoremap <leader>vtm :vsplit ~/.vimrc.tabmode<cr>
nnoremap <leader>sm :vsplit ~/.vim/bundle/vim-snippets/snippets<cr>

" no nnoremap because of surround plugin
map <leader>sl yyP$ysiw'j$

" source plugin under dev
nnoremap <leader>p⦿ :source %<cr>


"let g:UltiSnipsExpandTrigger = '☺'
"let g:UltiSnipsExpandTrigger = '☺'
"let g:UltiSnipsJumpForwardTrigger = 'è'
"let g:UltiSnipsJumpBackwardTrigger = 'à'
"map è <C-j>
"map à <C-j>
nmap ⦿ cw
imap ⦿ <C-p>
"imap ⦿ <C-l>
"imap ☺ <C-l>
"smap è <C-k>

"smap ⦿ <C-j>

"map à call UltiSnips#JumpForwards()
"
"vmap  <silent> ⦿ ☺context
map <leader>ta <C-]>
nnoremap <leader>. :CtrlPTag<cr>


"ruby motion
"
"forward method
map <leader>u ]m
map <leader>U ]M
" previous method
map <leader>mm [m
map <leader>M [M
" forward and open new
map <leader>i ]Mo<CR>def<TAB>
imap ii <ESC>o

" Uge warnig use noremap and so one
map t j
map s k


" VTR tmux runner
map <leader>de :VtrSendLinesToRunner<cr>
map <leader>do :VtrOpenRunner {'orientation': 'h', 'percentage':30}<cr>
map <leader>dk :VtrKillRunner<cr>



" extract methods

"task point:
"- store line to extract into a buffer
"- write psudo plugin into a function on vimrc.
"- reload easly modifications

vmap <leader>⦿ "bdOmethod_extracted1<esc>]Mo<CR>def<tab>method_extracted1<tab><esc>dd"bP:%s/method_extracted1/


let g:choosewin_overlay_enable = 1
let g:choosewin_color_overlay = { 'cterm': [23, 23]  }
let g:choosewin_color_overlay_current = { 'cterm': [58, 58]  }
map <leader>, :ChooseWin<CR>
